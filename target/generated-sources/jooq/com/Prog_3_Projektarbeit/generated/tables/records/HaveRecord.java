/*
 * This file is generated by jOOQ.
 */
package com.Prog_3_Projektarbeit.generated.tables.records;


import com.Prog_3_Projektarbeit.generated.tables.Have;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class HaveRecord extends UpdatableRecordImpl<HaveRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>Have.budget_id</code>.
     */
    public void setBudgetId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>Have.budget_id</code>.
     */
    public Integer getBudgetId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>Have.user_name</code>.
     */
    public void setUserName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>Have.user_name</code>.
     */
    public String getUserName() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached HaveRecord
     */
    public HaveRecord() {
        super(Have.HAVE);
    }

    /**
     * Create a detached, initialised HaveRecord
     */
    public HaveRecord(Integer budgetId, String userName) {
        super(Have.HAVE);

        setBudgetId(budgetId);
        setUserName(userName);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised HaveRecord
     */
    public HaveRecord(com.Prog_3_Projektarbeit.generated.tables.pojos.Have value) {
        super(Have.HAVE);

        if (value != null) {
            setBudgetId(value.getBudgetId());
            setUserName(value.getUserName());
            resetChangedOnNotNull();
        }
    }
}
