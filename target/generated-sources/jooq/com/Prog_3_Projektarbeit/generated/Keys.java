/*
 * This file is generated by jOOQ.
 */
package com.Prog_3_Projektarbeit.generated;


import com.Prog_3_Projektarbeit.generated.tables.Accounts;
import com.Prog_3_Projektarbeit.generated.tables.Transactions;
import com.Prog_3_Projektarbeit.generated.tables.Users;
import com.Prog_3_Projektarbeit.generated.tables.records.AccountsRecord;
import com.Prog_3_Projektarbeit.generated.tables.records.TransactionsRecord;
import com.Prog_3_Projektarbeit.generated.tables.records.UsersRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in the
 * default schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountsRecord> ACCOUNTS__PK_ACCOUNTS = Internal.createUniqueKey(Accounts.ACCOUNTS, DSL.name("pk_accounts"), new TableField[] { Accounts.ACCOUNTS.ID }, true);
    public static final UniqueKey<TransactionsRecord> TRANSACTIONS__PK_TRANSACTIONS = Internal.createUniqueKey(Transactions.TRANSACTIONS, DSL.name("pk_transactions"), new TableField[] { Transactions.TRANSACTIONS.ID }, true);
    public static final UniqueKey<UsersRecord> USERS__PK_USERS = Internal.createUniqueKey(Users.USERS, DSL.name("pk_users"), new TableField[] { Users.USERS.ID }, true);
    public static final UniqueKey<UsersRecord> USERS__UK_USERS_1_41366661 = Internal.createUniqueKey(Users.USERS, DSL.name("uk_users_1_41366661"), new TableField[] { Users.USERS.USERNAME }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AccountsRecord, UsersRecord> ACCOUNTS__FK_ACCOUNTS_PK_USERS = Internal.createForeignKey(Accounts.ACCOUNTS, DSL.name("fk_accounts_pk_users"), new TableField[] { Accounts.ACCOUNTS.USER_ID }, Keys.USERS__PK_USERS, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<TransactionsRecord, AccountsRecord> TRANSACTIONS__FK_TRANSACTIONS_PK_ACCOUNTS = Internal.createForeignKey(Transactions.TRANSACTIONS, DSL.name("fk_transactions_pk_accounts"), new TableField[] { Transactions.TRANSACTIONS.ACCOUNT_ID }, Keys.ACCOUNTS__PK_ACCOUNTS, new TableField[] { Accounts.ACCOUNTS.ID }, true);
}
