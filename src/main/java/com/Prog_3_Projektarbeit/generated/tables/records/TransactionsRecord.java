/*
 * This file is generated by jOOQ.
 */
package com.Prog_3_Projektarbeit.generated.tables.records;


import com.Prog_3_Projektarbeit.generated.tables.Transactions;

import java.math.BigDecimal;
import java.time.LocalDate;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TransactionsRecord extends UpdatableRecordImpl<TransactionsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>Transactions.transaction_id</code>.
     */
    public void setTransactionId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>Transactions.transaction_id</code>.
     */
    public Integer getTransactionId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>Transactions.transaction_Name</code>.
     */
    public void setTransactionName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>Transactions.transaction_Name</code>.
     */
    public String getTransactionName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>Transactions.budget_id</code>.
     */
    public void setBudgetId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>Transactions.budget_id</code>.
     */
    public Integer getBudgetId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>Transactions.user_id</code>.
     */
    public void setUserId(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>Transactions.user_id</code>.
     */
    public String getUserId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>Transactions.category</code>.
     */
    public void setCategory(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>Transactions.category</code>.
     */
    public String getCategory() {
        return (String) get(4);
    }

    /**
     * Setter for <code>Transactions.ammount</code>.
     */
    public void setAmmount(BigDecimal value) {
        set(5, value);
    }

    /**
     * Getter for <code>Transactions.ammount</code>.
     */
    public BigDecimal getAmmount() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>Transactions.date</code>.
     */
    public void setDate(LocalDate value) {
        set(6, value);
    }

    /**
     * Getter for <code>Transactions.date</code>.
     */
    public LocalDate getDate() {
        return (LocalDate) get(6);
    }

    /**
     * Setter for <code>Transactions.description</code>.
     */
    public void setDescription(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>Transactions.description</code>.
     */
    public String getDescription() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransactionsRecord
     */
    public TransactionsRecord() {
        super(Transactions.TRANSACTIONS);
    }

    /**
     * Create a detached, initialised TransactionsRecord
     */
    public TransactionsRecord(Integer transactionId, String transactionName, Integer budgetId, String userId, String category, BigDecimal ammount, LocalDate date, String description) {
        super(Transactions.TRANSACTIONS);

        setTransactionId(transactionId);
        setTransactionName(transactionName);
        setBudgetId(budgetId);
        setUserId(userId);
        setCategory(category);
        setAmmount(ammount);
        setDate(date);
        setDescription(description);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised TransactionsRecord
     */
    public TransactionsRecord(com.Prog_3_Projektarbeit.generated.tables.pojos.Transactions value) {
        super(Transactions.TRANSACTIONS);

        if (value != null) {
            setTransactionId(value.getTransactionId());
            setTransactionName(value.getTransactionName());
            setBudgetId(value.getBudgetId());
            setUserId(value.getUserId());
            setCategory(value.getCategory());
            setAmmount(value.getAmmount());
            setDate(value.getDate());
            setDescription(value.getDescription());
            resetChangedOnNotNull();
        }
    }
}
