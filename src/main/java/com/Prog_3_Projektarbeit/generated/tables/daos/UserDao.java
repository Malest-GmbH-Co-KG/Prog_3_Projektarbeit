/*
 * This file is generated by jOOQ.
 */
package com.Prog_3_Projektarbeit.generated.tables.daos;


import com.Prog_3_Projektarbeit.generated.tables.User;
import com.Prog_3_Projektarbeit.generated.tables.records.UserRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class UserDao extends DAOImpl<UserRecord, com.Prog_3_Projektarbeit.generated.tables.pojos.User, String> {

    /**
     * Create a new UserDao without any configuration
     */
    public UserDao() {
        super(User.USER, com.Prog_3_Projektarbeit.generated.tables.pojos.User.class);
    }

    /**
     * Create a new UserDao with an attached configuration
     */
    public UserDao(Configuration configuration) {
        super(User.USER, com.Prog_3_Projektarbeit.generated.tables.pojos.User.class, configuration);
    }

    @Override
    public String getId(com.Prog_3_Projektarbeit.generated.tables.pojos.User object) {
        return object.getUserName();
    }

    /**
     * Fetch records that have <code>user_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.Prog_3_Projektarbeit.generated.tables.pojos.User> fetchRangeOfUserName(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.USER_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_name IN (values)</code>
     */
    public List<com.Prog_3_Projektarbeit.generated.tables.pojos.User> fetchByUserName(String... values) {
        return fetch(User.USER.USER_NAME, values);
    }

    /**
     * Fetch a unique record that has <code>user_name = value</code>
     */
    public com.Prog_3_Projektarbeit.generated.tables.pojos.User fetchOneByUserName(String value) {
        return fetchOne(User.USER.USER_NAME, value);
    }

    /**
     * Fetch a unique record that has <code>user_name = value</code>
     */
    public Optional<com.Prog_3_Projektarbeit.generated.tables.pojos.User> fetchOptionalByUserName(String value) {
        return fetchOptional(User.USER.USER_NAME, value);
    }

    /**
     * Fetch records that have <code>Vorname BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.Prog_3_Projektarbeit.generated.tables.pojos.User> fetchRangeOfVorname(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.VORNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Vorname IN (values)</code>
     */
    public List<com.Prog_3_Projektarbeit.generated.tables.pojos.User> fetchByVorname(String... values) {
        return fetch(User.USER.VORNAME, values);
    }

    /**
     * Fetch records that have <code>Nachname BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.Prog_3_Projektarbeit.generated.tables.pojos.User> fetchRangeOfNachname(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.NACHNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Nachname IN (values)</code>
     */
    public List<com.Prog_3_Projektarbeit.generated.tables.pojos.User> fetchByNachname(String... values) {
        return fetch(User.USER.NACHNAME, values);
    }

    /**
     * Fetch records that have <code>password BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.Prog_3_Projektarbeit.generated.tables.pojos.User> fetchRangeOfPassword(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.PASSWORD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>password IN (values)</code>
     */
    public List<com.Prog_3_Projektarbeit.generated.tables.pojos.User> fetchByPassword(String... values) {
        return fetch(User.USER.PASSWORD, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.Prog_3_Projektarbeit.generated.tables.pojos.User> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(User.USER.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.Prog_3_Projektarbeit.generated.tables.pojos.User> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(User.USER.CREATED_AT, values);
    }
}
