/*
 * This file is generated by jOOQ.
 */
package com.Prog_3_Projektarbeit.generated.tables.daos;


import com.Prog_3_Projektarbeit.generated.tables.Budget;
import com.Prog_3_Projektarbeit.generated.tables.records.BudgetRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class BudgetDao extends DAOImpl<BudgetRecord, com.Prog_3_Projektarbeit.generated.tables.pojos.Budget, Object> {

    /**
     * Create a new BudgetDao without any configuration
     */
    public BudgetDao() {
        super(Budget.BUDGET, com.Prog_3_Projektarbeit.generated.tables.pojos.Budget.class);
    }

    /**
     * Create a new BudgetDao with an attached configuration
     */
    public BudgetDao(Configuration configuration) {
        super(Budget.BUDGET, com.Prog_3_Projektarbeit.generated.tables.pojos.Budget.class, configuration);
    }

    @Override
    public Object getId(com.Prog_3_Projektarbeit.generated.tables.pojos.Budget object) {
        return object.getBudgetId();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public List<com.Prog_3_Projektarbeit.generated.tables.pojos.Budget> fetchRangeOfBudgetId(Object lowerInclusive, Object upperInclusive) {
        return fetchRange(Budget.BUDGET.BUDGET_ID, lowerInclusive, upperInclusive);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public List<com.Prog_3_Projektarbeit.generated.tables.pojos.Budget> fetchByBudgetId(Object... values) {
        return fetch(Budget.BUDGET.BUDGET_ID, values);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public com.Prog_3_Projektarbeit.generated.tables.pojos.Budget fetchOneByBudgetId(Object value) {
        return fetchOne(Budget.BUDGET.BUDGET_ID, value);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public Optional<com.Prog_3_Projektarbeit.generated.tables.pojos.Budget> fetchOptionalByBudgetId(Object value) {
        return fetchOptional(Budget.BUDGET.BUDGET_ID, value);
    }

    /**
     * Fetch records that have <code>budget_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.Prog_3_Projektarbeit.generated.tables.pojos.Budget> fetchRangeOfBudgetName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Budget.BUDGET.BUDGET_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>budget_name IN (values)</code>
     */
    public List<com.Prog_3_Projektarbeit.generated.tables.pojos.Budget> fetchByBudgetName(String... values) {
        return fetch(Budget.BUDGET.BUDGET_NAME, values);
    }

    /**
     * Fetch records that have <code>ammount BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.Prog_3_Projektarbeit.generated.tables.pojos.Budget> fetchRangeOfAmmount(Float lowerInclusive, Float upperInclusive) {
        return fetchRange(Budget.BUDGET.AMMOUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ammount IN (values)</code>
     */
    public List<com.Prog_3_Projektarbeit.generated.tables.pojos.Budget> fetchByAmmount(Float... values) {
        return fetch(Budget.BUDGET.AMMOUNT, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.Prog_3_Projektarbeit.generated.tables.pojos.Budget> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Budget.BUDGET.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.Prog_3_Projektarbeit.generated.tables.pojos.Budget> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(Budget.BUDGET.CREATED_AT, values);
    }
}
