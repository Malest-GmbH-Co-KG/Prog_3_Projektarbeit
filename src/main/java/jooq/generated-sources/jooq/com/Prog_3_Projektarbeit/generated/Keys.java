/*
 * This file is generated by jOOQ.
 */
package com.Prog_3_Projektarbeit.generated;


import com.Prog_3_Projektarbeit.generated.tables.Budget;
import com.Prog_3_Projektarbeit.generated.tables.Have;
import com.Prog_3_Projektarbeit.generated.tables.Transactions;
import com.Prog_3_Projektarbeit.generated.tables.User;
import com.Prog_3_Projektarbeit.generated.tables.records.BudgetRecord;
import com.Prog_3_Projektarbeit.generated.tables.records.HaveRecord;
import com.Prog_3_Projektarbeit.generated.tables.records.TransactionsRecord;
import com.Prog_3_Projektarbeit.generated.tables.records.UserRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in the
 * default schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<BudgetRecord> BUDGET__PK_BUDGET = Internal.createUniqueKey(Budget.BUDGET, DSL.name("pk_budget"), new TableField[] { Budget.BUDGET.BUDGET_ID }, true);
    public static final UniqueKey<HaveRecord> HAVE__PK_HAVE = Internal.createUniqueKey(Have.HAVE, DSL.name("pk_Have"), new TableField[] { Have.HAVE.BUDGET_ID, Have.HAVE.USER_NAME }, true);
    public static final UniqueKey<TransactionsRecord> TRANSACTIONS__PK_TRANSACTIONS = Internal.createUniqueKey(Transactions.TRANSACTIONS, DSL.name("pk_Transactions"), new TableField[] { Transactions.TRANSACTIONS.TRANSACTION_ID }, true);
    public static final UniqueKey<UserRecord> USER__PK_USER = Internal.createUniqueKey(User.USER, DSL.name("pk_User"), new TableField[] { User.USER.USER_NAME }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<HaveRecord, BudgetRecord> HAVE__FK_HAVE_PK_BUDGET = Internal.createForeignKey(Have.HAVE, DSL.name("fk_Have_pk_budget"), new TableField[] { Have.HAVE.BUDGET_ID }, Keys.BUDGET__PK_BUDGET, new TableField[] { Budget.BUDGET.BUDGET_ID }, true);
    public static final ForeignKey<HaveRecord, UserRecord> HAVE__FK_HAVE_PK_USER = Internal.createForeignKey(Have.HAVE, DSL.name("fk_Have_pk_User"), new TableField[] { Have.HAVE.USER_NAME }, Keys.USER__PK_USER, new TableField[] { User.USER.USER_NAME }, true);
    public static final ForeignKey<TransactionsRecord, BudgetRecord> TRANSACTIONS__FK_TRANSACTIONS_PK_BUDGET = Internal.createForeignKey(Transactions.TRANSACTIONS, DSL.name("fk_Transactions_pk_budget"), new TableField[] { Transactions.TRANSACTIONS.BUDGET_ID }, Keys.BUDGET__PK_BUDGET, new TableField[] { Budget.BUDGET.BUDGET_ID }, true);
    public static final ForeignKey<TransactionsRecord, UserRecord> TRANSACTIONS__FK_TRANSACTIONS_PK_USER = Internal.createForeignKey(Transactions.TRANSACTIONS, DSL.name("fk_Transactions_pk_User"), new TableField[] { Transactions.TRANSACTIONS.USER_ID }, Keys.USER__PK_USER, new TableField[] { User.USER.USER_NAME }, true);
}
